*{ /*Universal Selector*/
    box-sizing: border-box; /* Faz com que o navegador não calcule a dimensão de um elemento somando bordas e margens com altura e largura. */
} 

/*[lang='es']{     -> Attribute Selector
    font-weight: bold;
}
*/

/* [class~='journey']{
    font-style: italic;
}  */
main{
    max-width: 700px;
    padding: 1rem 2rem;
    border: 2px solid black;
    margin: 0 auto;
}
nav{
    display: flex;
    justify-content: center;
    position: sticky;
    top: 0;
}
nav ul {
    display: flex; /* Esse elemento se torna um flex-container e podemos manipular os filhos desse elemento de novas maneiras. */
}
nav ul li{
    margin: 0 0.25rem;
    list-style: none;
}
body{
    display: grid;
}
.journey{
    font-style: italic;
}

#skills{ /* id selector */
    color: red;
}

h1, h2{ /* Grouping Selectors */
    color: purple;
}

blockquote p{ /* Descendant Combinator */
    color: green;
}

form > p{ /* Child Combinator */
    color: brown;
}

legend + p{ /* Next-sibling Combinator */
    color: orange;
}

h2 ~ blockquote { /* Subsequent-sibling Combinator: */
    color: fuchsia;
}

#path>ul>li:nth-child(2n+1){ /* Pseudo-class. Nesse caso, irá pegar os filhos de LI, dividir em 2, e pegar o primeiro elemento de cada. */
    color: blueviolet;
}

#journey tbody tr td:nth-of-type(odd){ /* Irá selecionar apenas os elementos do tipo TD, e pegar as posições ímpares */
    color: cyan;
}

a:visited{ /* Irá aplicar alguma propriedade após o usuário já ter acessado aquele link. */
   color: indigo;
}
a:hover{ /* Irá aplicar alguma propriedade quando o usuário passar o mouse por cima */
    color: orange;
}
input:focus{ /* Irá aplicar alguma propriedade quando eu estiver selecionando com o teclado. */
    outline: 2px solid purple;
}

section:not(#path){ /* Irá aplicar alguma propriedade em tudo que não for o que você especificou dentro de not() */
    font-style: italic;
}

p::first-letter{ /* Pseudo-elemento. Irá aplicar alguma propriedade na primeira letra de cada elemento que for um parágrafo. */
    font-style: italic;
}

:is(#aboutme, #resume) p{ /*Pseudo-clase. Irá aplicar alguma propriedade em todos os parágrafos que pertencem a #aboutme e #resume. */
    font-size: 20px;
}

blockquote{
    border: 1px solid purple;
    padding: 1em;
}

.resume-fieldset{
    border: none;
    margin: 0;
    padding: 0;
}
.resume-fieldset legend{
    padding: 0;
}

.label-contact{
    display: block;
    margin: 0.125rem;
}
.contact-field{
    margin-bottom: 1.25rem;
}
.aboutme-picture{
    float: left; /* Retira o elemento do fluxo normal e é posicionado aonde especificado. Os textos e elementos irão se posicionar ao seu redor. */ 
    margin-right: 1em;
}
#quotes{
   display: grid; /* É uma propriedade que define um layout baseado em grade bidimensional.  */
   grid-template-columns: 250px 250px; /* Define o tamanho das colunas dentro do grid. */
   grid-template-rows: 250px 250px;       /*  Define o tamanho das linhas dentro do grid. */
}
.title-quote-1{
    grid-column-start: 2;
    grid-row-start: 1;
    text-align: center;
}
.title-quote-2{
    grid-column-start: 1;
    grid-row-start: 2;
    text-align: center;
}
.quote-2{
   grid-row-start: 2;
   grid-column-start: 1;
}
.quote-1{
    grid-row-start: 1   ;
    grid-column-start: 2;
}
/*Praticando z-index.  Z-index: É o eixo Z, representando a profundidade, podemos pensar nele como uma imagem tridimensional. */ 

/* nav{
    z-index: 10;
    background-color: red;
}
#skills{
    position: absolute;
    top: 0;
    left: 0;
    background-color: purple;
    z-index: 11;
} */